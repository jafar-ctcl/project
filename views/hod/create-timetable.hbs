<div class="row justify-content-center">
    <div class="col-md-10 col-lg-8">
        {{#if period}}

        <h2 class="text-center m-4 text-primary">Create Timetable</h2>
        <form action="/hod/create-timetable" method="POST">
            <h2>{{course}}{{semester}}{{day}}</h2>
            <input type="hidden" name="course" value="{{course}}">
            <input type="hidden" name="semester" value="{{semester}}">
            <input type="hidden" name="day" value="{{day}}">
            {{#each period}}
            <div id="periodSection">
                <!-- Period Details -->
                <div class="time-slot mb-4 border p-4 rounded shadow-sm">
                    <h5 class="text-secondary mb-3">{{this.periods}}</h5>

                    <!-- Period Time Input -->
                    <div class="mb-3">
                        <label for="period{{@index}}" class="form-label">Period Time</label>
                        <input type="text" name="periods" id="period{{@index}}" class="form-control"
                            value="{{this.period_time}}" readonly>
                    </div>

                    <div class="mb-3">
                        <label class="form-label fs-5">Teacher</label>
                        <select id="teacherDropdown{{@index}}" class="form-select custom-select" name="teachers"
                            required>
                            <option value="">Choose a teacher...</option>
                            {{#each ../teachersInfo}}
                            <!-- Use ../ to reference the teachersInfo in the parent context -->
                            <option value="{{this.name}}" data-email="{{this.email}}" data-subjects="{{this.subjects}}">
                                {{this.name}}
                            </option>
                            {{else}}
                            <option disabled>No teachers available</option>
                            {{/each}}
                        </select>

                        <!-- Hidden email input field -->
                        <input type="hidden" name="teacherEmails" id="teacherEmailInput{{@index}}">
                    </div>

                    <!-- Subject Dropdown -->
                    <div class="mb-3">
                        <label for="subjectDropdown{{@index}}" class="form-label fs-5">Subject</label>
                        <select id="subjectDropdown{{@index}}" class="form-select custom-select" name="subjects"
                            required>
                            <option value="">Choose a subject...</option>
                        </select>
                    </div>
                </div>
            </div>
            {{/each}}


            <!-- Submit Button -->
            <div class="text-center">
                <button type="submit" class="btn btn-primary btn-lg mb-4">Submit Timetable</button>
            </div>
        </form>
        {{/if}}
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Select all teacher dropdowns and subject dropdowns
        const teacherDropdowns = document.querySelectorAll('.form-select.custom-select[name="teachers"]');
        const subjectDropdowns = document.querySelectorAll('.form-select.custom-select[name="subjects"]');

        // Function to update the hidden email input when a teacher is selected
        teacherDropdowns.forEach((teacherDropdown, index) => {
            const emailInput = document.getElementById(`teacherEmailInput${index}`);

            teacherDropdown.addEventListener('change', () => {
                const selectedOption = teacherDropdown.options[teacherDropdown.selectedIndex];
                const email = selectedOption.getAttribute('data-email');

                // Set the email value to the hidden input
                emailInput.value = email;
            });
        });

        // Function to update the subject dropdown based on selected teacher
        function updateSubjectDropdown(teacherDropdown, subjectDropdown) {
            // Clear the current subjects in the dropdown
            subjectDropdown.innerHTML = '<option value="">Choose a subject...</option>';

            const selectedTeacher = teacherDropdown.options[teacherDropdown.selectedIndex];
            const subjects = selectedTeacher.getAttribute('data-subjects');

            if (subjects) {
                const subjectList = subjects.split(','); // Split by comma

                // Add subjects to the subject dropdown
                subjectList.forEach(subject => {
                    const option = document.createElement('option');
                    option.value = subject.trim();
                    option.textContent = subject.trim();
                    subjectDropdown.appendChild(option);
                });
            }
        }

        // Add event listeners to teacher dropdowns to update corresponding subject dropdowns
        teacherDropdowns.forEach((teacherDropdown, index) => {
            const subjectDropdown = subjectDropdowns[index];
            teacherDropdown.addEventListener('change', function () {
                updateSubjectDropdown(teacherDropdown, subjectDropdown);
            });
        });
    });
</script>