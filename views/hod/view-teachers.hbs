<section class="container mt-5">
  <h2 class="text-center mb-4">Add Teachers</h2>

  <!-- Table for Managing Teachers -->
  <div class="table-responsive">
    <table class="table table-bordered">
      <thead class="thead-dark">
        <tr>
          <th>Full Name</th>
          <th>Email</th>
          <th>Phone Number</th>
          <th>Gender</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="teacher-table-body">
        {{#each teachers}}
        <tr id="teacher-{{email}}">
          <td>{{name}}</td>
          <td>{{email}}</td>
          <td>{{phone}}</td>
          <td>{{gender}}</td>
          <td>
            <!-- Manage Button -->
            <button class="btn btn-info btn-sm manage-btn" 
                    data-bs-toggle="modal" 
                    data-bs-target="#teacherModal"
                    data-email="{{email}}" 
                    onclick="manageTeacher('{{name}}', '{{email}}')">
              Manage
            </button>

            <!-- View Button (Initially hidden) -->
            <a href="/view-managed-teacher/{{email}}" 
               class="btn btn-success btn-sm view-btn d-none" 
               id="view-{{email}}">
              View
            </a>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>

  <!-- Manage Teacher Modal -->
  <div class="modal fade" id="teacherModal" tabindex="-1" aria-labelledby="teacherModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="teacherModalLabel">Manage Teacher</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="manageTeacherForm">
            <!-- Name -->
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" id="name" name="name" class="form-control" />
            </div>

            <!-- Email (hidden) -->
            <div class="mb-3 d-none">
              <label for="email" class="form-label">Email</label>
              <input type="text" id="email" name="email" class="form-control" readonly />
            </div>

            <!-- Set New Teacher ID -->
            <div class="mb-3">
              <label for="teacherId" class="form-label">Set Teacher ID</label>
              <input type="text" id="teacherId" name="teacherId" class="form-control" placeholder="Enter Teacher ID" />
            </div>

            <!-- Class Teacher -->
            <div class="mb-3">
              <label for="classTeacher" class="form-label">Class Teacher</label>
              <select id="classTeacher" name="classTeacher" class="form-select">
                <option value="">Select Class</option>
                <option value="1">1st Year</option>
                <option value="2">2nd Year</option>
                <option value="3">3rd Year</option>
              </select>
            </div>

            <!-- Subjects -->
            <div class="mb-3">
              <label for="subjects" class="form-label">Subjects</label>
              <div id="subjectInputs">
                <div class="input-group mb-2">
                  <input type="text" name="subjects[]" class="form-control" placeholder="Enter subject" />
                  <button type="button" class="btn btn-danger" onclick="removeSubjectInput(this)">Remove</button>
                </div>
              </div>
              <button type="button" class="btn btn-primary mt-2" onclick="addSubjectInput()">Add Subject</button>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-success" id="saveTeacherButton" onclick="saveTeacher()">Save</button>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Populate the modal with teacher data
  function manageTeacher(name, email) {
    document.getElementById('name').value = name; // Populate Name
    document.getElementById('email').value = email; // Populate Email
    document.getElementById('teacherId').value = ''; // Reset Teacher ID
    document.getElementById('classTeacher').value = ''; // Reset Class Teacher
    document.getElementById('subjectInputs').innerHTML = `
      <div class="input-group mb-2">
        <input type="text" name="subjects[]" class="form-control" placeholder="Enter subject" />
        <button type="button" class="btn btn-danger" onclick="removeSubjectInput(this)">Remove</button>
      </div>
    `;
  }

  // Add subject input fields
  function addSubjectInput() {
    const subjectInputs = document.getElementById('subjectInputs');
    const newInputGroup = document.createElement('div');
    newInputGroup.classList.add('input-group', 'mb-2');

    const newInput = document.createElement('input');
    newInput.type = 'text';
    newInput.name = 'subjects[]';
    newInput.classList.add('form-control');
    newInput.placeholder = 'Enter subject';

    const removeButton = document.createElement('button');
    removeButton.type = 'button';
    removeButton.classList.add('btn', 'btn-danger');
    removeButton.textContent = 'Remove';
    removeButton.onclick = function () {
      removeSubjectInput(removeButton);
    };

    newInputGroup.appendChild(newInput);
    newInputGroup.appendChild(removeButton);
    subjectInputs.appendChild(newInputGroup);
  }

  // Remove subject input fields
  function removeSubjectInput(button) {
    const subjectInputs = document.getElementById('subjectInputs');
    if (subjectInputs.children.length > 1) {
      button.parentElement.remove();
    } else {
      alert('At least one subject is required.');
    }
  }

  // Save Teacher function
  function saveTeacher() {
    const email = document.getElementById('email').value.trim();
    const teacherId = document.getElementById('teacherId').value.trim();
    const classTeacher = document.getElementById('classTeacher').value;
    const subjects = Array.from(
      document.querySelectorAll('input[name="subjects[]"]')
    ).map(input => input.value.trim());

    if (!teacherId || subjects.some(subject => !subject)) {
      alert('Please fill all fields before saving.');
      return;
    }

    const saveButton = document.getElementById('saveTeacherButton');
    saveButton.disabled = true;

    // AJAX Request
    $.ajax({
      url: '/hod/manage-teacher',
      type: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({
        email: email,
        teacherId: teacherId,
        classTeacher: classTeacher,
        subjects: subjects,
      }),
      success: function (data) {
        saveButton.disabled = false;

        if (data.success) {
          alert('Teacher details saved successfully!');

          // Find the "Manage" button and hide it
          const teacherRow = document.getElementById(`teacher-${email}`);
          const manageButton = teacherRow.querySelector('.manage-btn');
          const viewButton = teacherRow.querySelector('.view-btn');

          // Hide the Manage button and show the View button
          if (manageButton) {
            manageButton.style.display = 'none'; // Hide Manage Button
          }
          if (viewButton) {
            viewButton.classList.remove('d-none'); // Show View Button
          }

          // Close the modal
          const modal = bootstrap.Modal.getInstance(document.getElementById('teacherModal'));
          modal.hide();

        } else {
          alert('Error: ' + data.message);
        }
      },
      error: function (xhr, status, error) {
        saveButton.disabled = false;
        console.error('Error occurred:', xhr.responseText || error);
        alert('An error occurred. Please try again.');
      },
    });
  }
</script>
