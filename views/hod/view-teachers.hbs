<section class="container mt-5">
  <h2 class="text-center mb-4">Add Teachers</h2>

  <!-- Table for Managing Teachers -->
  <div class="table-responsive">
    <table class="table table-bordered">
      <thead class="thead-dark">
        <tr>
          <th>Full Name</th>
          <th>Email</th>
          <th>Phone Number</th>
          <th>Gender</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        {{#each teachers}}
        <tr>
          <td>{{name}}</td>
          <td>{{email}}</td>
          <td>{{phone}}</td>
          <td>{{gender}}</td>
          <td>
            <button 
              class="btn btn-info btn-sm" 
              data-bs-toggle="modal" 
              data-bs-target="#teacherModal" 
              onclick="manageTeacher('{{name}}', '{{email}}')">
              Manage
            </button>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>

  <!-- Manage Teacher Modal -->
  <div class="modal fade" id="teacherModal" tabindex="-1" aria-labelledby="teacherModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="teacherModalLabel">Manage Teacher</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <form id="manageTeacherForm">
            <!-- Name -->
            <div class="mb-3">
              <label for="name" class="form-label">Name</label>
              <input type="text" id="name" name="name" class="form-control" />
            </div>

            <!-- Email -->
            <div class="mb-3">
              <label for="email" class="form-label">Email</label>
              <input type="text" id="email" name="email" class="form-control" readonly />
            </div>

            <!-- Set New Teacher ID -->
            <div class="mb-3">
              <label for="newId" class="form-label">Set Teacher ID</label>
              <input type="text" id="newId" name="newId" class="form-control" placeholder="Enter New Teacher ID" />
            </div>

            <!-- Class Teacher -->
            <div class="mb-3">
              <label for="classTeacher" class="form-label">Class Teacher</label>
              <select id="classTeacher" name="classTeacher" class="form-select">
                <option value="1">1st Year</option>
                <option value="2">2nd Year</option>
                <option value="3">3rd Year</option>
              </select>
            </div>

            <!-- Subjects -->
            <div class="mb-3">
              <label for="subjects" class="form-label">Subjects</label>
              <div id="subjectInputs">
                <div class="input-group mb-2">
                  <input type="text" name="subjects[]" class="form-control" placeholder="Enter subject" />
                  <button type="button" class="btn btn-danger" onclick="removeSubjectInput(this)">Remove</button>
                </div>
              </div>
              <button type="button" class="btn btn-primary mt-2" onclick="addSubjectInput()">Add Subject</button>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-success" onclick="saveTeacher()">Save</button>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  function manageTeacher(name, email) {
    document.getElementById('name').value = name; // Populate Name
    document.getElementById('email').value = email; // Populate Email
    document.getElementById('newId').value = ''; // Reset Teacher ID
    document.getElementById('classTeacher').value = ''; // Reset Class Teacher
    document.getElementById('subjectInputs').innerHTML = `
      <div class="input-group mb-2">
        <input type="text" name="subjects[]" class="form-control" placeholder="Enter subject" />
        <button type="button" class="btn btn-danger" onclick="removeSubjectInput(this)">Remove</button>
      </div>
    `;
  }

  function addSubjectInput() {
    const subjectInputs = document.getElementById('subjectInputs');
    const newInputGroup = document.createElement('div');
    newInputGroup.classList.add('input-group', 'mb-2');

    const newInput = document.createElement('input');
    newInput.type = 'text';
    newInput.name = 'subjects[]';
    newInput.classList.add('form-control');
    newInput.placeholder = 'Enter subject';

    const removeButton = document.createElement('button');
    removeButton.type = 'button';
    removeButton.classList.add('btn', 'btn-danger');
    removeButton.textContent = 'Remove';
    removeButton.onclick = function () {
      removeSubjectInput(removeButton);
    };

    newInputGroup.appendChild(newInput);
    newInputGroup.appendChild(removeButton);
    subjectInputs.appendChild(newInputGroup);
  }

  function removeSubjectInput(button) {
    button.parentElement.remove();
  }

function saveTeacher() {
  fetch('/hod/manage-teacher', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      name: document.getElementById('name').value,
      email: document.getElementById('email').value,
      newId: document.getElementById('newId').value,
      classTeacher: document.getElementById('classTeacher').value,
      subjects: Array.from(document.querySelectorAll('input[name="subjects[]"]')).map(input => input.value),
    }),
  })
  .then(response => {
    if (!response.ok) {
      // If the response status code is not OK (e.g., 400, 500), throw an error.
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    return response.json();
  })
  .then(data => {
    if (data.success) {
      alert('Teacher details saved successfully!');
      location.reload();
    } else {
      alert('Error: ' + data.message);
    }
  })
  .catch(error => {
    console.error('Error occurred:', error); // Log full error details for debugging
    alert('An error occurred. Please try again.'); // User-friendly message
  });
}

</script>
